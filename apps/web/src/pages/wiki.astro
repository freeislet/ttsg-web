---
// wiki.astro - 노션 위키 링크와 최근 문서 목록을 보여주는 페이지
import Layout from '../layouts/Layout.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
---

<Layout>
  <Header />
  <main class="max-w-4xl mx-auto px-4 py-8">
    <div class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">TT Wiki</h1>
      <p class="text-lg text-gray-600 mb-6">
        TTSG 프로젝트의 문서와 지식을 관리하는 위키 페이지입니다.
      </p>
    </div>

    <!-- 노션 위키 링크 섹션 -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <h2 class="text-2xl font-semibold text-gray-800 mb-4 flex items-center">
        <svg class="w-6 h-6 mr-2 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
          <path
            d="M4.459 4.208c.746.606 1.026.56 2.428.466l8.893-.621c.285 0 .047-.28-.093-.311L14.199 3.28c-.28-.31-.93-.619-1.209-.619L4.553 3.043c-.528 0-.746.528-.094.93v.235zm.746 2.428c0 .31.155.528.528.528h14.478c.31 0 .528-.218.528-.528V5.668c0-.31-.218-.528-.528-.528H5.733c-.373 0-.528.218-.528.528v.968zm0 1.24v9.944c0 .746.373 1.117 1.026 1.117h11.636c.746 0 1.026-.466 1.026-1.117V7.876c0-.528-.28-.746-.746-.746H5.951c-.466 0-.746.218-.746.746z"
          ></path>
        </svg>
         노션 위키
      </h2>
      <p class="text-gray-600 mb-4">TTSG 프로젝트의 모든 문서와 가이드는 노션에서 관리됩니다.</p>
      <a
        href="https://www.notion.so/TT-Wiki-24fffc6454ce806ebaeeee1a0497640d"
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center bg-blue-600 text-white px-6 py-3 rounded-lg font-medium transition-colors hover:bg-blue-700"
      >
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path
            d="M4.459 4.208c.746.606 1.026.56 2.428.466l8.893-.621c.285 0 .047-.28-.093-.311L14.199 3.28c-.28-.31-.93-.619-1.209-.619L4.553 3.043c-.528 0-.746.528-.094.93v.235zm.746 2.428c0 .31.155.528.528.528h14.478c.31 0 .528-.218.528-.528V5.668c0-.31-.218-.528-.528-.528H5.733c-.373 0-.528.218-.528.528v.968zm0 1.24v9.944c0 .746.373 1.117 1.026 1.117h11.636c.746 0 1.026-.466 1.026-1.117V7.876c0-.528-.28-.746-.746-.746H5.951c-.466 0-.746.218-.746.746z"
          ></path>
        </svg>
         TT Wiki 바로가기
        <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
        </svg>
      </a>
    </div>

    <!-- 최근 문서 목록 섹션 -->
    <div class="bg-white rounded-lg shadow-md p-6">
      <h2 class="text-2xl font-semibold text-gray-800 mb-4 flex items-center">
        <svg
          class="w-6 h-6 mr-2 text-green-600"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          ></path>
        </svg>
         최근 문서
      </h2>
      <p class="text-gray-600 mb-4">노션 위키의 최근 업데이트된 문서 목록입니다.</p>

      <!-- 로딩 상태 -->
      <div id="loading-state" class="flex items-center justify-center py-8">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
        <span class="ml-3 text-gray-600">노션에서 최신 문서를 불러오는 중...</span>
      </div>

      <!-- 노션 API에서 가져온 동적 목록 -->
      <div id="recent-pages" class="space-y-3 hidden">
        <!-- 동적으로 로드될 콘텐츠 -->
      </div>

      <!-- 에러 상태 -->
      <div id="error-state" class="hidden p-4 bg-red-50 border border-red-200 rounded-lg">
        <div class="flex items-center">
          <svg class="w-5 h-5 text-red-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path
              fill-rule="evenodd"
              d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
              clip-rule="evenodd"></path>
          </svg>
          <span class="text-red-700 font-medium">문서 목록을 불러올 수 없습니다</span>
        </div>
        <p class="text-red-600 text-sm mt-2">
          노션 API 연결에 문제가 있습니다. 환경변수 설정을 확인해주세요.
        </p>
        <div class="mt-3">
          <button
            id="retry-button"
            class="text-sm bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700"
          >
            다시 시도
          </button>
        </div>
      </div>

      <!-- 빈 상태 -->
      <div id="empty-state" class="hidden p-4 bg-gray-50 rounded-lg text-center">
        <svg
          class="w-12 h-12 text-gray-400 mx-auto mb-3"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          ></path>
        </svg>
        <p class="text-gray-600">아직 문서가 없습니다.</p>
      </div>
    </div>
  </main>
  <Footer />
</Layout>

<script>
  import type { NotionApiResponse } from '../types/api'

  /**
   * 다시 시도 버튼 이벤트 핸들러
   */
  function setupRetryButton() {
    const retryButton = document.getElementById('retry-button')
    retryButton?.addEventListener('click', loadRecentPages)
  }

  /**
   * 노션 API에서 최근 페이지 목록을 가져와서 화면에 표시합니다
   */
  async function loadRecentPages() {
    const loadingState = document.getElementById('loading-state')
    const recentPages = document.getElementById('recent-pages')
    const errorState = document.getElementById('error-state')
    const emptyState = document.getElementById('empty-state')

    // 모든 상태 숨기기
    ;[recentPages, errorState, emptyState].forEach((el) => el?.classList.add('hidden'))
    loadingState?.classList.remove('hidden')

    try {
      const response = await fetch('/api/notion-pages.json')
      const result = (await response.json()) as NotionApiResponse

      if (!response.ok || !result.success) {
        throw new Error(result.message || 'API 호출 실패')
      }

      const pages = result.data

      if (pages.length === 0) {
        // 빈 상태 표시
        loadingState?.classList.add('hidden')
        emptyState?.classList.remove('hidden')
        return
      }

      // 페이지 목록 렌더링
      if (recentPages) {
        const colors = ['blue', 'green', 'purple', 'orange', 'red', 'indigo']

        recentPages.innerHTML = pages
          .map((page, index) => {
            const color = colors[index % colors.length]
            const date = new Date(page.lastEdited).toLocaleDateString('ko-KR', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })

            return `
            <div class="border-l-4 border-${color}-500 pl-4 py-2 hover:bg-gray-50 transition-colors">
              <h3 class="font-medium text-gray-900">
                <a href="${page.url}" target="_blank" rel="noopener noreferrer" 
                   class="hover:text-${color}-600 transition-colors flex items-center">
                  ${page.title}
                  <svg class="w-4 h-4 ml-1 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                  </svg>
                </a>
              </h3>
              <span class="text-xs text-gray-500">
                최종 수정: ${date}
              </span>
            </div>
          `
          })
          .join('')

        // 성공 상태 표시
        loadingState?.classList.add('hidden')
        recentPages.classList.remove('hidden')
      }
    } catch (error) {
      console.error('노션 페이지 로딩 실패:', error)

      // 에러 상태 표시
      loadingState?.classList.add('hidden')
      errorState?.classList.remove('hidden')
    }
  }

  // 페이지 로드 시 실행
  document.addEventListener('DOMContentLoaded', () => {
    loadRecentPages()
    setupRetryButton()
  })
</script>
