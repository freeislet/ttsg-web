---
import { getCollection } from 'astro:content'
import BlogLayout from '@/layouts/BlogLayout.astro'
import { processWikiLinksInMarkdown } from '@/lib/markdown-utils'

export const prerender = true

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog')

  // 발행된 포스트만 정적 경로 생성
  const publishedPosts = blogPosts.filter((post) => !post.data.draft)

  return publishedPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props

// post가 존재하는지 확인
if (!post) {
  throw new Error('Post not found')
}

// 마크다운 렌더링은 BlogLayout에서 처리
---

<BlogLayout post={post} />

<!-- 위키 링크 클라이언트 사이드 스크립트 -->
<script>
  import { enhanceWikiLinksInHTML } from '@/lib/markdown-utils'

  // 페이지 로드 시 위키 링크 강화
  function initializeWikiLinks() {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', enhanceWikiLinksInHTML)
    } else {
      enhanceWikiLinksInHTML()
    }
  }

  // 스크립트 실행
  initializeWikiLinks()

  // 동적 콘텐츠 로드 시에도 위키 링크 처리
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
        setTimeout(enhanceWikiLinksInHTML, 0)
      }
    })
  })

  // 블로그 콘텐츠 영역 관찰
  const blogContent = document.querySelector('.blog-content')
  if (blogContent) {
    observer.observe(blogContent, {
      childList: true,
      subtree: true,
    })
  }
</script>
