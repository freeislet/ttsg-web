---
import { getCollection } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import BlogHeader from '@/components/blog/BlogHeader.astro'
import BlogList from '@/components/blog/BlogList.astro'
import { categoryData, type Category } from '@/types/blog'
import type { SEOData } from '@/types/seo'

export const prerender = true

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog')
  const publishedPosts = blogPosts.filter((post) => !post.data.draft)

  // 카테고리별로 그룹화
  const categories = [...new Set(publishedPosts.map((post) => post.data.category))]

  return categories.map((category) => ({
    params: { category },
    props: {
      posts: publishedPosts.filter((post) => post.data.category === category),
      category,
    },
  }))
}

const { posts, category } = Astro.props

const categoryInfo = categoryData[category as Category]

// SEO 데이터 구성
const seo: SEOData = {
  title: `${categoryInfo.detailedName} | TTSG 블로그`,
  description: `TTSG 블로그의 ${categoryInfo.detailedName} 카테고리입니다. ${categoryInfo.description}`,
  keywords: [`${categoryInfo.name}`, '블로그', 'TTSG', categoryInfo.detailedName],
  url: `/blog/category/${category}`,
  type: 'website' as const,
}
---

<Layout seo={seo}>
  <Header />

  <main class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 py-8">
      <BlogHeader
        title={categoryInfo.detailedName}
        description={categoryInfo.description}
        count={posts.length}
        currentPage={category}
      />
      <BlogList posts={posts} category={category} />
    </div>
  </main>

  <Footer />
</Layout>
