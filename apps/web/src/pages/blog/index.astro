---
import { getCollection } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import BlogList from '@/components/blog/BlogList.astro'
import { categories, categoryData, type Category } from '@/types/blog'
import { pageSEO } from '@/lib/seo/config'

// 모든 블로그 포스트 가져오기 (draft가 아닌 것만)
const _allPosts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true
})

// 발행일 기준으로 정렬 (최신순)
const allPosts = _allPosts.sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
)

// 카테고리별 포스트 수 계산
const categoryStats = categories.reduce(
  (acc, category) => {
    acc[category] = allPosts.filter((post) => post.data.category === category).length
    return acc
  },
  {} as Record<Category, number>
)

const seo = {
  ...pageSEO.blog,
  url: '/blog',
  type: 'website' as const,
}
---

<Layout seo={seo}>
  <Header />

  <main class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 py-8">
      <!-- 헤더 섹션 -->
      <header class="text-center mb-8">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">TTSG 블로그</h1>
      </header>

      <!-- 카테고리 네비게이션 -->
      <nav class="mb-8">
        <div class="flex flex-wrap justify-center gap-4">
          <a
            href="/blog"
            class="inline-flex items-center justify-center min-w-16 px-4 py-2 rounded-full text-sm font-medium bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors duration-200"
          >
            전체
          </a>
          {
            Object.entries(categoryData).map(([key, category]) => (
              <a
                href={`/blog/category/${key}`}
                class="inline-flex items-center justify-center min-w-16 px-4 py-2 rounded-full text-sm font-medium bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors duration-200"
              >
                {category.name}
              </a>
            ))
          }
        </div>
      </nav>

      <!-- 추천 포스트 섹션 -->
      <BlogList posts={allPosts} title="⭐ 추천 포스트" featured={true} maxPosts={6} />

      <!-- 최신 포스트 섹션 -->
      <BlogList posts={allPosts} title="최신 포스트" maxPosts={6} />

      <!-- 카테고리별 미리보기 -->
      {
        categories
          .filter((category: Category) => categoryStats[category] > 0)
          .map((category: Category) => (
            <div class="mt-16">
              <BlogList
                posts={allPosts}
                title={`${categoryData[category].name} (${categoryStats[category]})`}
                category={category}
                compact={true}
                maxPosts={6}
                showViewAll={true}
              />
            </div>
          ))
      }
    </div>
  </main>

  <Footer />
</Layout>
