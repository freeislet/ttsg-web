---
import BlogCard from './BlogCard.astro'
import type { CollectionEntry } from 'astro:content'
import type { Category } from '@/types/blog'
import { categoryData } from '@/types/blog'

export interface Props {
  posts: CollectionEntry<'blog'>[]
  title?: string
  showFeatured?: boolean
  category?: string
}

const { posts, title, showFeatured = false, category } = Astro.props

// 포스트 필터링 및 정렬
let filteredPosts = posts.filter((post) => !post.data.draft)

if (category) {
  filteredPosts = filteredPosts.filter((post) => post.data.category === category)
}

if (showFeatured) {
  filteredPosts = filteredPosts.filter((post) => post.data.featured)
}

// 발행일 기준 내림차순 정렬
filteredPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
---

<section class="py-8">
  <!-- 섹션 헤더 -->
  {
    (title || category) && (
      <div class="mb-8">
        <h2 class="text-2xl md:text-3xl font-bold text-gray-900 mb-2">
          {title ||
            (category && categoryData[category as Category].detailedName) ||
            '블로그 포스트'}
        </h2>
        {category && <p class="text-gray-600">{categoryData[category as Category].description}</p>}
        {showFeatured && <p class="text-gray-600">추천 포스트를 모아서 보여드립니다.</p>}
      </div>
    )
  }

  <!-- 포스트 목록 -->
  {
    filteredPosts.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredPosts.map((post) => (
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            pubDate={post.data.pubDate}
            category={post.data.category}
            tags={post.data.tags}
            slug={post.slug}
            heroImage={post.data.heroImage}
            featured={post.data.featured}
          />
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <svg
          class="w-16 h-16 text-gray-300 mx-auto mb-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          />
        </svg>
        <h3 class="text-lg font-medium text-gray-900 mb-2">
          {category
            ? `${categoryData[category as Category].detailedName} 포스트가 없습니다`
            : '포스트가 없습니다'}
        </h3>
        <p class="text-gray-500">
          {category
            ? `${categoryData[category as Category].detailedName} 카테고리의 새로운 포스트를 기다려주세요.`
            : '새로운 포스트를 기다려주세요.'}
        </p>
      </div>
    )
  }

  <!-- 더 보기 링크 (필요시) -->
  {
    filteredPosts.length > 6 && !showFeatured && (
      <div class="text-center mt-8">
        <a
          href={category ? `/blog/category/${category}` : '/blog'}
          class="inline-flex items-center px-6 py-3 border border-gray-300 rounded-md text-base font-medium text-gray-700 bg-white hover:bg-gray-50 hover:border-gray-400 transition-colors duration-200"
        >
          더 많은 포스트 보기
          <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 5l7 7-7 7"
            />
          </svg>
        </a>
      </div>
    )
  }
</section>
