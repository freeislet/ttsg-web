---
import type { CollectionEntry } from 'astro:content'
import Layout from './Layout.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import TableOfContents from '@/components/blog/TableOfContents.astro'
import { WikiLink } from '@/components/wiki/WikiLink'
import { categoryData, type Category } from '@/types/blog'
import '@/styles/blog.css'

export interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, pubDate, author, heroImage, tags, category, updatedDate } = post.data;

// 콘텐츠 렌더링하여 헤딩 추출
const { Content, headings } = await post.render();

// SEO를 위한 메타 정보 구성
const seoTitle = `${title} | TTSG Blog`
const seoDescription = description
---

<Layout title={seoTitle} description={seoDescription}>
  <Header />

  <main class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 py-8">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- 메인 콘텐츠 -->
        <article class="flex-1 max-w-4xl">
      <!-- 블로그 헤더 -->
      <header class="mb-8">
        {
          heroImage && (
            <div class="mb-6 relative overflow-hidden rounded-lg shadow-lg h-64 md:h-80">
              <!-- 흐릿한 배경 이미지 (cover) -->
              <div 
                class="absolute inset-0 bg-cover bg-center blur-sm scale-110 opacity-30"
                style={`background-image: url(${heroImage})`}
              ></div>
              <!-- 메인 이미지 (contain) -->
              <img
                src={heroImage}
                alt={title}
                class="relative z-10 w-full h-full object-contain"
              />
            </div>
          )
        }

        <div class="space-y-4">
          <!-- 카테고리 배지 -->
          {
            category && (
              <div class="flex items-center gap-2">
                <span
                  class={`inline-block px-3 py-1 text-sm font-medium rounded-full ${categoryData[category as Category].style}`}
                >
                  {categoryData[category as Category].name}
                </span>
              </div>
            )
          }

          <!-- 제목 -->
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 leading-tight">
            {title}
          </h1>

          <!-- 메타 정보 -->
          <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
            <span class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                <path
                  fill-rule="evenodd"
                  d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z"
                  clip-rule="evenodd"></path>
              </svg>
              {author}
            </span>

            {
              pubDate && (
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path
                      fill-rule="evenodd"
                      d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  {pubDate.toLocaleDateString('ko-KR')}
                </span>
              )
            }

            <div class="flex flex-wrap gap-2">
              {tags.map((tag: string) => (
                <span class="inline-block px-2 py-1 text-xs font-medium bg-gray-200 text-gray-700 rounded-md">
                  #{tag}
                </span>
              ))}
            </div>
          </div>

          <!-- 설명 -->
          <p class="text-lg text-gray-600 leading-relaxed">
            {description}
          </p>
        </div>
      </header>

      <!-- 모바일 목차 -->
      <div class="lg:hidden">
        <TableOfContents headings={headings} isMobile={true} />
      </div>

      <!-- 블로그 콘텐츠 -->
      <div class="prose prose-lg prose-gray max-w-none mx-auto blog-content">
        <div class="bg-white rounded-lg shadow-sm p-6 md:p-8">
          <Content components={{ WikiLink }} />
        </div>
      </div>

          <!-- 블로그 푸터 -->
          <footer class="mt-12 pt-8 border-t border-gray-200">
            <div class="flex items-center justify-between">
              <div class="text-sm text-gray-500">
                이 글이 도움이 되셨나요? TTSG에서 더 많은 정보를 확인하세요.
              </div>

              <!-- 소셜 공유 버튼 (향후 추가 예정) -->
              <div class="flex gap-2">
                <!-- 공유 버튼들이 들어갈 자리 -->
              </div>
            </div>
          </footer>
        </article>

        <!-- 데스크톱 사이드바 목차 -->
        <aside class="hidden lg:block w-64 flex-shrink-0">
          <TableOfContents headings={headings} isMobile={false} />
        </aside>
      </div>
    </div>
  </main>

  <Footer />
</Layout>

